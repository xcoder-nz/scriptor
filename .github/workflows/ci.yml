# .github/workflows/ci.yml
name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * SUN'  # weekly CodeQL

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 1. Dependency review on PRs
  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Review new dependencies
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  # 2. NPM audit
  npm-audit:
    needs: dependency-review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - name: Audit for vulnerabilities
        run: npm audit --audit-level=moderate

  # 3. Build, lint, typecheck, tests & coverage
  build-and-test:
    needs: [ dependency-review, npm-audit ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: [ 18.x, 20.x ]
    env:
      OPENAI_API_KEY: ${{ secrets.TEST_OPENAI_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Cache TS build info
        uses: actions/cache@v3
        with:
          path: ./.tsbuildinfo
          key: tsbuild-${{ hashFiles('tsconfig.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests under NYC
        run: npm run test:int:cov

      - name: Merge NYC coverage outputs
        run: npx nyc merge .nyc_output coverage/coverage.json

      - name: Generate combined coverage report
        run: npx nyc report --reporter=lcov --reporter=text

      - name: Upload coverage artifact
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          overwrite: true

      - name: Publish to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/coverage.json
          flags: ${{ matrix.os }}-${{ matrix.node-version }}
          fail_ci_if_error: true
          verbose: true

  # 4. CodeQL scanning (push & schedule)
  code-scanning:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3